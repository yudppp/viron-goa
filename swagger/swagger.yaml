consumes:
- application/json
definitions:
  Post:
    description: blog post (default view)
    example:
      contens: Hi gopher
      id: 1
      published_at: 2010-07-17T16:41:39Z
      status: draft
      title: hello viron-goa example
      url_name: hello
    properties:
      contens:
        description: contens
        example: Hi gopher
        type: string
      id:
        description: id
        example: 1
        format: int64
        type: integer
      published_at:
        description: published_at
        example: 2010-07-17T16:41:39Z
        format: date-time
        type: string
      status:
        description: status
        enum:
        - draft
        - published
        example: draft
        type: string
      title:
        description: name
        example: hello viron-goa example
        type: string
      url_name:
        description: url name
        example: hello
        type: string
    required:
    - id
    - url_name
    - title
    - contens
    - status
    title: 'Mediatype identifier: application/vnd.post+json; view=default'
    type: object
  PostCollection:
    description: PostCollection is the media type for an array of Post (default view)
    example:
    - contens: Hi gopher
      id: 1
      published_at: 2010-07-17T16:41:39Z
      status: draft
      title: hello viron-goa example
      url_name: hello
    items:
      $ref: '#/definitions/Post'
    title: 'Mediatype identifier: application/vnd.post+json; type=collection; view=default'
    type: array
  PostPayload:
    example:
      contents: Hi gopher
      published_at: 1981-05-13T08:32:14Z
      status: draft
      title: hello viron-goa example
      url_name: hello
    properties:
      contents:
        description: contents
        example: Hi gopher
        maxLength: 120
        type: string
      published_at:
        description: published_at
        example: 1981-05-13T08:32:14Z
        format: date-time
        type: string
      status:
        description: status
        enum:
        - draft
        - published
        example: draft
        type: string
      title:
        description: title
        example: hello viron-goa example
        maxLength: 120
        type: string
      url_name:
        description: url name
        example: hello
        type: string
    required:
    - url_name
    - title
    - contents
    - status
    title: PostPayload
    type: object
  Query:
    description: viron query (default view)
    example:
      key: Ratione dolor sapiente aut et deserunt voluptates.
      type: Est corrupti voluptatem.
    properties:
      key:
        description: key
        example: Ratione dolor sapiente aut et deserunt voluptates.
        type: string
      type:
        description: type
        example: Est corrupti voluptatem.
        type: string
    required:
    - key
    - type
    title: 'Mediatype identifier: application/vnd.query+json; view=default'
    type: object
  SigninPayload:
    example:
      email: identify key
      password: nk2vyulzua
    properties:
      email:
        description: ID or Email
        example: identify key
        type: string
      password:
        description: Password
        example: nk2vyulzua
        maxLength: 256
        type: string
    required:
    - email
    - password
    title: SigninPayload
    type: object
  Vironapi:
    description: viron api (default view)
    example:
      method: Autem perferendis quia provident.
      path: Veniam esse nemo.
    properties:
      method:
        description: name
        example: Autem perferendis quia provident.
        type: string
      path:
        description: path
        example: Veniam esse nemo.
        type: string
    required:
    - method
    - path
    title: 'Mediatype identifier: application/vnd.vironapi+json; view=default'
    type: object
  Vironauthtype:
    description: viron authtype media (default view)
    example:
      method: POST
      provider: ""
      type: signin
      url: /signin
    properties:
      method:
        description: method
        example: POST
        type: string
      provider:
        description: auth provider
        example: ""
        type: string
      type:
        description: auth type
        example: signin
        type: string
      url:
        description: url
        example: /signin
        type: string
    required:
    - type
    - provider
    - url
    - method
    title: 'Mediatype identifier: application/vnd.vironauthtype+json; view=default'
    type: object
  VironauthtypeCollection:
    description: VironauthtypeCollection is the media type for an array of Vironauthtype
      (default view)
    example:
    - method: POST
      provider: ""
      type: signin
      url: /signin
    - method: POST
      provider: ""
      type: signin
      url: /signin
    - method: POST
      provider: ""
      type: signin
      url: /signin
    items:
      $ref: '#/definitions/Vironauthtype'
    title: 'Mediatype identifier: application/vnd.vironauthtype+json; type=collection;
      view=default'
    type: array
  Vironcomponent:
    description: viron component (default view)
    example:
      api:
        method: Autem perferendis quia provident.
        path: Veniam esse nemo.
      name: Quis odio vel.
      pagination: false
      primary: A accusamus.
      query:
      - key: Ratione dolor sapiente aut et deserunt voluptates.
        type: Est corrupti voluptatem.
      - key: Ratione dolor sapiente aut et deserunt voluptates.
        type: Est corrupti voluptatem.
      style: Voluptatem aut nesciunt.
      table_labels:
      - Deleniti ullam est voluptates.
    properties:
      api:
        $ref: '#/definitions/Vironapi'
      name:
        description: name
        example: Quis odio vel.
        type: string
      pagination:
        description: pagination
        example: false
        type: boolean
      primary:
        description: primary key
        example: A accusamus.
        type: string
      query:
        description: query
        example:
        - key: Ratione dolor sapiente aut et deserunt voluptates.
          type: Est corrupti voluptatem.
        - key: Ratione dolor sapiente aut et deserunt voluptates.
          type: Est corrupti voluptatem.
        items:
          $ref: '#/definitions/Query'
        type: array
      style:
        description: style
        example: Voluptatem aut nesciunt.
        type: string
      table_labels:
        description: table label
        example:
        - Deleniti ullam est voluptates.
        items:
          example: Deleniti ullam est voluptates.
          type: string
        type: array
    required:
    - name
    - style
    - api
    title: 'Mediatype identifier: application/vnd.vironcomponent+json; view=default'
    type: object
  Vironpage:
    description: viron page (default view)
    example:
      components:
      - api:
          method: Autem perferendis quia provident.
          path: Veniam esse nemo.
        name: Quis odio vel.
        pagination: false
        primary: A accusamus.
        query:
        - key: Ratione dolor sapiente aut et deserunt voluptates.
          type: Est corrupti voluptatem.
        - key: Ratione dolor sapiente aut et deserunt voluptates.
          type: Est corrupti voluptatem.
        style: Voluptatem aut nesciunt.
        table_labels:
        - Deleniti ullam est voluptates.
      - api:
          method: Autem perferendis quia provident.
          path: Veniam esse nemo.
        name: Quis odio vel.
        pagination: false
        primary: A accusamus.
        query:
        - key: Ratione dolor sapiente aut et deserunt voluptates.
          type: Est corrupti voluptatem.
        - key: Ratione dolor sapiente aut et deserunt voluptates.
          type: Est corrupti voluptatem.
        style: Voluptatem aut nesciunt.
        table_labels:
        - Deleniti ullam est voluptates.
      group: Ut at molestias necessitatibus quasi sapiente.
      id: Rerum similique provident qui vitae.
      name: Ut rerum sint.
      section: Et ut quibusdam delectus.
    properties:
      components:
        description: pages
        example:
        - api:
            method: Autem perferendis quia provident.
            path: Veniam esse nemo.
          name: Quis odio vel.
          pagination: false
          primary: A accusamus.
          query:
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          style: Voluptatem aut nesciunt.
          table_labels:
          - Deleniti ullam est voluptates.
        - api:
            method: Autem perferendis quia provident.
            path: Veniam esse nemo.
          name: Quis odio vel.
          pagination: false
          primary: A accusamus.
          query:
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          style: Voluptatem aut nesciunt.
          table_labels:
          - Deleniti ullam est voluptates.
        items:
          $ref: '#/definitions/Vironcomponent'
        type: array
      group:
        description: group
        example: Ut at molestias necessitatibus quasi sapiente.
        type: string
      id:
        description: id
        example: Rerum similique provident qui vitae.
        type: string
      name:
        description: name
        example: Ut rerum sint.
        type: string
      section:
        description: section
        example: Et ut quibusdam delectus.
        type: string
    required:
    - id
    - name
    - section
    - group
    - components
    title: 'Mediatype identifier: application/vnd.vironpage+json; view=default'
    type: object
  Vironsetting:
    description: viron setting (default view)
    example:
      color: Expedita hic eum magni placeat pariatur.
      name: Optio omnis quo omnis ut.
      pages:
      - components:
        - api:
            method: Autem perferendis quia provident.
            path: Veniam esse nemo.
          name: Quis odio vel.
          pagination: false
          primary: A accusamus.
          query:
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          style: Voluptatem aut nesciunt.
          table_labels:
          - Deleniti ullam est voluptates.
        - api:
            method: Autem perferendis quia provident.
            path: Veniam esse nemo.
          name: Quis odio vel.
          pagination: false
          primary: A accusamus.
          query:
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          - key: Ratione dolor sapiente aut et deserunt voluptates.
            type: Est corrupti voluptatem.
          style: Voluptatem aut nesciunt.
          table_labels:
          - Deleniti ullam est voluptates.
        group: Ut at molestias necessitatibus quasi sapiente.
        id: Rerum similique provident qui vitae.
        name: Ut rerum sint.
        section: Et ut quibusdam delectus.
      tags:
      - Repellat a consequatur distinctio possimus in.
      - Repellat a consequatur distinctio possimus in.
      - Repellat a consequatur distinctio possimus in.
      theme: Repellendus cum quos quia.
      thumbnail: Esse repudiandae modi pariatur in.
    properties:
      color:
        description: color
        example: Expedita hic eum magni placeat pariatur.
        type: string
      name:
        description: name
        example: Optio omnis quo omnis ut.
        type: string
      pages:
        description: pages
        example:
        - components:
          - api:
              method: Autem perferendis quia provident.
              path: Veniam esse nemo.
            name: Quis odio vel.
            pagination: false
            primary: A accusamus.
            query:
            - key: Ratione dolor sapiente aut et deserunt voluptates.
              type: Est corrupti voluptatem.
            - key: Ratione dolor sapiente aut et deserunt voluptates.
              type: Est corrupti voluptatem.
            style: Voluptatem aut nesciunt.
            table_labels:
            - Deleniti ullam est voluptates.
          - api:
              method: Autem perferendis quia provident.
              path: Veniam esse nemo.
            name: Quis odio vel.
            pagination: false
            primary: A accusamus.
            query:
            - key: Ratione dolor sapiente aut et deserunt voluptates.
              type: Est corrupti voluptatem.
            - key: Ratione dolor sapiente aut et deserunt voluptates.
              type: Est corrupti voluptatem.
            style: Voluptatem aut nesciunt.
            table_labels:
            - Deleniti ullam est voluptates.
          group: Ut at molestias necessitatibus quasi sapiente.
          id: Rerum similique provident qui vitae.
          name: Ut rerum sint.
          section: Et ut quibusdam delectus.
        items:
          $ref: '#/definitions/Vironpage'
        type: array
      tags:
        description: tags
        example:
        - Repellat a consequatur distinctio possimus in.
        - Repellat a consequatur distinctio possimus in.
        - Repellat a consequatur distinctio possimus in.
        items:
          example: Repellat a consequatur distinctio possimus in.
          type: string
        type: array
      theme:
        description: theme
        example: Repellendus cum quos quia.
        type: string
      thumbnail:
        description: thumbnail
        example: Esse repudiandae modi pariatur in.
        type: string
    required:
    - name
    - color
    - theme
    - pages
    - tags
    - thumbnail
    title: 'Mediatype identifier: application/vnd.vironsetting+json; view=default'
    type: object
  error:
    description: Error response media type (default view)
    example:
      code: invalid_value
      detail: Value of ID must be an integer
      id: 3F1FKVRR
      meta:
        timestamp: 1.458609e+09
      status: "400"
    properties:
      code:
        description: an application-specific error code, expressed as a string value.
        example: invalid_value
        type: string
      detail:
        description: a human-readable explanation specific to this occurrence of the
          problem.
        example: Value of ID must be an integer
        type: string
      id:
        description: a unique identifier for this particular occurrence of the problem.
        example: 3F1FKVRR
        type: string
      meta:
        additionalProperties: true
        description: a meta object containing non-standard meta-information about
          the error.
        example:
          timestamp: 1.458609e+09
        type: object
      status:
        description: the HTTP status code applicable to this problem, expressed as
          a string value.
        example: "400"
        type: string
    title: 'Mediatype identifier: application/vnd.goa.error; view=default'
    type: object
info:
  description: viron goa service
  title: viron goa
  version: ""
paths:
  /{filepath}:
    get:
      externalDocs:
        description: viron client
        url: ""
      operationId: client#/*filepath
      parameters:
      - description: Relative file path
        in: path
        name: filepath
        required: true
        type: string
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
        "404":
          description: File not found
          schema:
            $ref: '#/definitions/error'
      summary: Download viron-client/v1
  /posts:
    get:
      description: Get post list
      operationId: post#list
      parameters:
      - description: limit
        in: query
        name: limit
        required: false
        type: integer
      - description: offset
        in: query
        name: offset
        required: false
        type: integer
      - description: filter status
        enum:
        - draft
        - published
        in: query
        name: status
        required: false
        type: string
      produces:
      - application/vnd.post+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/PostCollection'
        "500":
          description: Internal Server Error
      security:
      - jwt: []
      summary: list post
      tags:
      - post
    put:
      description: Create post
      operationId: post#create
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/PostPayload'
      responses:
        "204":
          description: No Content
        "500":
          description: Internal Server Error
      security:
      - jwt: []
      summary: create post
      tags:
      - post
  /posts/{id}:
    delete:
      description: Delte post
      operationId: post#delete
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - jwt: []
      summary: delete post
      tags:
      - post
    put:
      description: Update post
      operationId: post#update
      parameters:
      - description: id
        in: path
        name: id
        required: true
        type: integer
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/PostPayload'
      responses:
        "204":
          description: No Content
        "400":
          description: Bad Request
        "500":
          description: Internal Server Error
      security:
      - jwt: []
      summary: update post
      tags:
      - post
  /signin:
    post:
      description: Creates a valid JWT
      operationId: viron#signin
      parameters:
      - in: body
        name: payload
        required: true
        schema:
          $ref: '#/definitions/SigninPayload'
      responses:
        "204":
          description: No Content
          headers:
            Authorization:
              description: Generated JWT
              type: string
        "401":
          description: Unauthorized
        "500":
          description: Internal Server Error
      summary: signin viron
      tags:
      - viron
  /swagger.json:
    get:
      externalDocs:
        description: Swagger JSON
        url: ""
      operationId: swagger#/swagger.json
      responses:
        "200":
          description: File downloaded
          schema:
            type: file
      security:
      - jwt: []
      summary: Download swagger/swagger.json
  /viron:
    get:
      description: Get viron menu
      operationId: viron#get
      produces:
      - application/vnd.vironsetting+json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/Vironsetting'
      security:
      - jwt: []
      summary: get viron
      tags:
      - viron
  /viron_authtype:
    get:
      description: Get viron authtype
      operationId: viron#authtype
      produces:
      - application/vnd.vironauthtype+json; type=collection
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/VironauthtypeCollection'
      summary: authtype viron
      tags:
      - viron
produces:
- application/json
responses:
  BadRequest:
    description: Bad Request
  InternalServerError:
    description: Internal Server Error
  NoContent:
    description: No Content
  Unauthorized:
    description: Unauthorized
securityDefinitions:
  jwt:
    description: |2-


      **Security Scopes**:
        * `api:access`: API access
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
